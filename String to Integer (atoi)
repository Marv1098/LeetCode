class Solution {
    public int myAtoi(String str) {
        if (str == null || str.isEmpty())
            return 0;
        int sign = 1, i = 0, n = str.length();
        
        while ( i < n && str.charAt(i) == ' ' ) {
            ++i;
        }
        if ( i >= n ){
            return 0;
        }
        if ( str.charAt(i) == '+' || str.charAt(i) == '-' ){
            sign = str.charAt(i++) == '+' ? 1 : -1;
        }
        long result = 0;
        while ( i < n && Character.isDigit( str.charAt(i) ) ) {
            result = result * 10 + ( str.charAt(i++) - '0' ); // Horner's Rule
            if ( result * sign < Integer.MIN_VALUE || result * sign > Integer.MAX_VALUE)
                return sign == 1 ? Integer.MAX_VALUE : Integer.MIN_VALUE;
        }
        return (int) (result * sign);
    }
}
